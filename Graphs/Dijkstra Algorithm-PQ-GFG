// https://media.geeksforgeeks.org/img-practice/chatIcon-1653561581.svg
// User Function Template
class Solution {
  public:
    // Function to find the shortest distance of all the vertices
    // from the source vertex src.
    vector<int> dijkstra(vector<vector<pair<int, int>>> &adj, int src) {
        // Code here
        
        
        priority_queue<pair<int,int>,vector<pair<int,int>>,greater<pair<int,int>>>pq;
        
        pq.push({0,src});
        int n = adj.size();
        vector<int>ans(n,INT_MAX);
        ans[src] = 0;
        
        while(!pq.empty())
        {
            int node = pq.top().second;
            int dis = pq.top().first;
            pq.pop();
            
            for(auto ele:adj[node])
            {
                int curDis = ans[ele.first];
                
                if(dis + ele.second<curDis)
                {
                    ans[ele.first] = dis + ele.second;
                    pq.push({dis+ele.second,ele.first});
                }
            }
        }
        
        return ans;
    }
};
