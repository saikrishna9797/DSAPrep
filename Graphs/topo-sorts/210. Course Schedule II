class Solution {
public:
    vector<int> findOrder(int numCourses, vector<vector<int>>& prerequisites) {
        vector<int>inDegree(numCourses,0);

        for(int i=0;i<prerequisites.size();i++)
        {
            inDegree[prerequisites[i][0]] += 1;
        }

        vector<vector<int>>adj(numCourses);

        for(int i=0;i<prerequisites.size();i++)
        {
            adj[prerequisites[i][1]].push_back(prerequisites[i][0]);
        }  

        queue<int>q; 

        for(int i=0;i<numCourses;i++)
        {
            if(inDegree[i] == 0)q.push(i);
        }

        vector<int>ans;

        while(!q.empty())
        {
            int node = q.front();
            q.pop();

            ans.push_back(node);

            for(auto ele:adj[node])
            {
                inDegree[ele] -= 1;
                if(inDegree[ele] == 0)
                q.push(ele);
            }
        }

        if(ans.size() != numCourses)
        {
            vector<int>emptyArray;
            return emptyArray;
        }

        return ans;

    }
};
