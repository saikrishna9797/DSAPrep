class Solution {
public:
    int ladderLength(string beginWord, string endWord, vector<string>& wordList) {
        int n = wordList.size();
        queue<pair<string,int>>q;

        vector<int>vist(n,0);

        q.push({beginWord,1});

        while(!q.empty())
        {
            string begin = "";
            begin += q.front().first;
            int len = q.front().second;
            if(begin == endWord)break;
            q.pop();

            
            for(int i=0;i<n;i++)
            {
                int dif = 0;
                for(int j = 0;j<beginWord.size();j++)
                {
                    if(begin[j] != wordList[i][j])dif += 1;
                }

                if(dif == 1)
                {
                    if(!vist[i])
                    {
                        vist[i] = 1;
                        q.push({wordList[i],len + 1});
                    }
                }
            }

        }

        if(q.empty())return 0;

        int ans = q.front().second;

        return ans;
    }
};
