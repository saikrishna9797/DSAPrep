
class Solution {
  public:
    // Function to return list containing vertices in Topological order.
    vector<int> topologicalSort(vector<vector<int>>& adj) {
        // Your code here
        int n = adj.size();
        vector<bool>vist(n,false);
        
        vector<int>indegree(n,0);
        queue<int>q;
        
        for(int i=0;i<n;i++)
        {
            if(!vist[i])
            {
                for(auto ele:adj[i])indegree[ele] += 1;
            }
        }
        
        for(int i=0;i<n;i++)
        {
            if(indegree[i] == 0)q.push(i);
        }
        
        vector<int>ans;
        
        
        while(!q.empty())
        {
            int node = q.front();
            q.pop();
            
            for(auto ele:adj[node])
            {
                indegree[ele] -= 1;
                if(indegree[ele] == 0)q.push(ele);
            }
            
            ans.push_back(node);
            
        }
        
        
        
        
        
        return ans;
    }
};
