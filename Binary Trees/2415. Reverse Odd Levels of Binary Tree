/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
void trav(TreeNode*& l,TreeNode*& r,int level)
{
    if(l == NULL || r == NULL)return;
    // cout<<level<<" ";
    if(level%2 == 1)
    {
        int temp = l->val;
        l->val = r->val;
        r->val = temp;
    }
    trav(l->left,r->right,level+1);
    trav(l->right,r->left,level+1);
    return;
} 
class Solution {
public:
    TreeNode* reverseOddLevels(TreeNode* root) {
        TreeNode* ans = root;
        int level = 1;
        trav(root->left,root->right,level);
        return root;
    }
};
