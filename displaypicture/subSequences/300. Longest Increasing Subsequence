class Solution {
public:
    int solve(vector<vector<int>> &dp,vector<int> &nums,int indx,int prev,int n)
    {
        if(indx == n)return 0;

        if(dp[indx][prev+1] != -1)return dp[indx][prev+1];

        if(prev == -1)
        {
            return dp[indx][prev+1] = 
            max(1+solve(dp,nums,indx+1,indx,n),solve(dp,nums,indx+1,prev,n));
        }
        else if(nums[prev]<nums[indx])
        {
            return dp[indx][prev+1] = max(1+solve(dp,nums,indx+1,indx,n),solve(dp,nums,indx+1,prev,n));
        }
        
        return dp[indx][prev+1] = solve(dp,nums,indx+1,prev,n);
    }
    int lengthOfLIS(vector<int>& nums) {
        
        int n = nums.size();

        vector<vector<int>>dp(n+1,vector<int>(n+1,-1));
        return solve(dp,nums,0,-1,n);
    }
};
