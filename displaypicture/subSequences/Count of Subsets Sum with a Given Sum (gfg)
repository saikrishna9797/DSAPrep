class Solution {
  public:
    int solve(vector<int> &arr,int indx,int n,int target,vector<vector<int>> &dp)
    {
        // if(target == 0)return 1;
        
        // if(sum == 0)return 1;
        if(indx == n)
        {
            if(target == 0)return 1;
            return 0;
        }
        if(dp[indx][target] != -1)return dp[indx][target];
        
        if(target>=arr[indx])
        return dp[indx][target] = 
        solve(arr,indx+1,n,target-arr[indx],dp) + 
        solve(arr,indx+1,n,target,dp);
        
        return dp[indx][target] = solve(arr,indx+1,n,target,dp);
        
    }
    int perfectSum(vector<int>& arr, int target) {
        // code here
        int n = arr.size();
        vector<vector<int>>dp(n+1,vector<int>(target+1,-1));
        
        return solve(arr,0,n,target,dp);
    }
};
