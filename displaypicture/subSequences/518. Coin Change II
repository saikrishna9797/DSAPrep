class Solution {
public:
    int solve(vector<int> &coins,int indx,int amount,vector<vector<int>> &dp)
    {
        if(amount == 0)return 1;

        if(indx == 0)return 0;

        if(amount<0)return 0;

        if(dp[indx][amount] != -1)return dp[indx][amount];

        return dp[indx][amount] = solve(coins,indx,amount-coins[indx-1],dp) + solve(coins,indx-1,amount,dp);

    }
    int change(int amount, vector<int>& coins) {
        int n = coins.size();
        if(amount == 0)return 1;

        vector<vector<int>>dp(n+1,vector<int>(amount+1,-1));
        solve(coins,n,amount,dp);

        // for(int i=0;i<=n;i++)
        // {
        //     for(int j = 0;j<=amount;j++)cout<<dp[i][j]<<" ";

        //     cout<<endl;
        // }
        if(dp[n][amount]<0)return 0;
        return dp[n][amount];
    }
};
